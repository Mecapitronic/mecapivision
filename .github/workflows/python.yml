# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

# permissions:
#   contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4
      with:
        lfs: true

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8 pylint pytest uv
        uv sync --frozen

    - name: Analysing the code with ruff
      uses: astral-sh/ruff-action@v3
      with:
        args: check --output-format=github .

    # bug in pylint with cv2: E1101: Module 'cv2' has no '' member (no-member)
    # https://github.com/pylint-dev/pylint/issues/10027
    # - name: Analyse the  with pylint
    #   run: |
    #     uv run pylint $(git ls-files '*.py')

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        uv run flake8 mecapivision --count --select=E9,F63,F7,F82 --show-source --statistics --max-line-length 90 --max-doc-length 100
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        uv run flake8 mecapivision --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics --max-line-length 90 --max-doc-length 100

    - name: Test with pytest
      run: |
        uv run --with pytest pytest tests

